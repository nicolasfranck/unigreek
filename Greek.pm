package Greek;
use utf8;
use strict;
use warnings;
use feature qw(:5.10);

our %mapping;
our %end_char = (
  "s" => "ς"
);

sub map_str { 
  my $str = $_[0];
  my(@parts)= $str =~ /(\X)/go;  

  my @output;
  my $current_combination = "";

  my $c = "";
  while(defined($c)){
    $c = shift(@parts);
    while(defined($c) && exists($mapping{ $current_combination.$c })){
      $current_combination.=$c;      
      $c = shift(@parts); 
    }
    if($current_combination ne ""){    

      push @output,($mapping{ $current_combination } || $current_combination);
  
      #last char did not combine with current_combination
      if(defined($c)){        
        $current_combination = $c;
      }else{
        $current_combination = "";
      }
    }elsif(defined($c)){
      push @output,$c;
    }
  }
  join("",@output);
}

%mapping = (
  "a" => "α",
  "a|" => "ᾳ",
  "a|)" => "ᾀ",
  "a)|" => "ᾀ",
  "a(|" => "ᾁ",
  "a|(" => "ᾁ",
  "a=|" => "ᾷ",
  "a|=" => "ᾷ",
  "a\\|" => "ᾲ",
  "a|\\" => "ᾲ",
  "a/|" => "ᾴ",
  "a|/" => "ᾴ",
  "a)\\|" => "ᾂ",
  "a)|\\" => "ᾂ",
  "a)/|" => "ᾄ",
  "a)|/" => "ᾄ",
  "a(\\|" => "ᾃ",
  "a(|\\" => "ᾃ",
  "a(/|" => "ᾅ",
  "a(|/" => "ᾅ",
  "a)=|" => "ᾆ",
  "a)|=" => "ᾆ",
  "a(=|" => "ᾇ",
  "a(|=" => "ᾇ",
  "a)" => "ἀ",
  "a\\" => "ὰ",
  "a/" => "ά",
  "a)\\" => "ἂ",
  "a)/" => "ἄ",
  "a(" => "ἁ",
  "a(\\" => "ἃ",
  "a(/" => "ἅ",
  "a=" => "ᾶ",
  "a)=" => "ἆ",
  "a(=" => "ἇ",
  "b" => "β",
  "g" => "γ",
  "d" => "δ",
  "e" => "ε",
  "e/" => "έ",
  "e\\" => "ὲ",
  "e)" => "ἐ",
  "e(" => "ἑ",
  "e)\\" => "ἒ",
  "e)/" => "ἔ",
  "e(\\" => "ἓ",
  "e(/" => "ἕ",  
  "z" => "ζ",
  "h" => "η",
  "h\\" => "ὴ",
  "h/" => "ή",
  "h)" => "ἠ",
  "h)\\" => "ἢ",
  "h)/" => "ἤ",
  "h(" => "ἡ",
  "h(\\" => "ἣ",
  "h(/" => "ἥ",
  "h=" => "ῆ",
  "h)=" => "ἦ",
  "h(=" => "ἧ",
  "h|" => "ῃ",
  "h|)" => "ᾐ",
  "h)|" => "ᾐ",
  "h(|" => "ᾑ",
  "h|(" => "ᾑ",
  "h=|" => "ῇ",
  "h|=" => "ῇ",
  "h\\|" => "ῂ",
  "h|\\" => "ῂ",
  "h/|" => "ῄ",
  "h|/" => "ῄ",
  "h)\\|" => "ᾒ",
  "h)|\\" => "ᾒ",
  "h)/|" => "ᾔ",
  "h)|/" => "ᾔ",
  "h(\\|" => "ᾓ",
  "h(|\\" => "ᾓ",
  "h(/|" => "ᾕ",
  "h(|/" => "ᾕ",
  "h)=|" => "ᾖ",
  "h)|=" => "ᾖ",
  "h(=|" => "ᾗ",
  "h(|=" => "ᾗ",
  "q" => "θ",
  "i" => "ι",
  "i\\" => "ὶ",
  "i/" => "ί",
  "i(" => "ἱ",
  "i)" => "ἰ",
  "i)\\" => "ἲ",
  "i)/" => "ἴ",
  "i(\\" => "ἳ",
  "i(/" => "ἵ",
  "i=" => "ῖ",
  "i)=" => "ἶ",
  "i(=" => "ἷ",
  "k" => "κ",
  "l" => "λ",
  "m" => "μ",
  "n" => "ν",
  "c" => "ξ",
  "o" => "ο",
  "o\\" => "ὸ",
  "o/" => "ό",
  "o)" => "ὀ",
  "o(" => "ὁ",
  "o)\\" => "ὂ",
  "o)/" => "ὄ",
  "o(\\" => "ὃ",
  "o(/" => "ὅ",
  "p" => "π",
  "r" => "ρ",
  "s" => "σ",
  #todo: s op einde van een string moet ς  
  "s." => "ς.",
  "s " => "ς ",
  "s," => "ς,",
  "s?" => "ς;",
  "s;" => "ς·",
  "s:" => "ς·",
  
  "t" => "τ",
  "u" => "υ",
  "u\\" => "ὺ",
  "u/" => "ύ",
  "u)" => "ὐ",
  "u(" => "ὑ",
  "u)\\" => "ὒ",
  "u)/" => "ὔ",
  "u(\\" => "ὓ",
  "u(/" => "ὕ",
  "u=" => "ῦ",
  "u)=" => "ὖ",
  "u(=" => "ὗ",
  "f" => "φ",
  "x" => "χ",
  "y" => "ψ",
  "w" => "ω",
  "v" => "ϝ",  
  "A" => "Α",
  "A\\" => "Ὰ",
  "A/" => "Ά",
  "A)" => "Ἀ",
  "A(" => "Ἁ",
  "A)\\" => "Ἂ",
  "A)/" => "",
  "A(\\" => "",  
  "A(/" => "Ἅ",
  "A)=" => "Ἆ",
  "A(=" => "Ἇ",

  "A|" => "ᾼ",
  "A|)" => "ᾈ",
  "A)|" => "ᾈ",
  "A(|" => "ᾉ",
  "A|(" => "ᾉ",
  "A)\\|" => "ᾊ",
  "A)|\\" => "ᾊ",
  "A)/|" => "ᾌ",
  "A)|/" => "ᾌ",
  "A(\\|" => "ᾋ",
  "A(|\\" => "ᾋ",
  "A(/|" => "ᾍ",
  "A(|/" => "ᾍ",
  "A)=|" => "ᾎ",
  "A)|=" => "ᾎ",
  "A(=|" => "ᾏ",
  "A(|=" => "ᾏ",

  "B" => "Β",
  "G" => "Γ",
  "D" => "Δ",
  "E" => "Ε",
  "E\\" => "Ὲ",
  "E/" => "Έ",
  "E)" => "Ἐ",
  "E(" => "Ἑ",
  "E)\\" => "Ἒ",
  "E)/" => "Ἔ",
  "E(\\" => "Ἓ",
  "E(/" => "Ἕ",
  "Z" => "Ζ",

  "H" => "Η",
  "H)" => "Ἠ",
  "H(" => "Ἡ",  
  "H\\" => "Ὴ",
  "H/" => "Ή",
  "H)\\" => "Ἢ",
  "H)/" => "Ἤ",
  "H(\\" => "Ἣ",
  "H(/" => "Ἥ",
  "H)=" => "Ἦ",
  "H(=" => "Ἧ",

  "H|" => "ῌ",
  "H|)" => "ᾘ",
  "H)|" => "ᾘ",
  "H(|" => "ᾙ",
  "H|(" => "ᾙ",    
  "H)\\|" => "ᾚ",
  "H)|\\" => "ᾚ",
  "H)/|" => "ᾜ",
  "H)|/" => "ᾜ",
  "H(\\|" => "ᾛ",
  "H(|\\" => "ᾛ",
  "H(/|" => "ᾝ",
  "H(|/" => "ᾝ",
  "H)=|" => "ᾞ",
  "H)|=" => "ᾞ",
  "H(=|" => "ᾟ",
  "H(|=" => "ᾟ",

  "Q" => "Θ",
  "I" => "Ι",

  "I\\" => "Ὶ",
  "I/" => "Ί",
  "I)" => "Ἰ",
  "I(" => "Ἱ",
  "I)\\" => "Ἲ",
  "I)/" => "Ἴ",
  "I(\\" => "Ἳ",
  "I(/" => "Ἵ",
  "I)=" => "Ἶ",
  "I(=" => "Ἷ",

  "K" => "Κ",
  "L" => "Λ",
  "M" => "Μ",
  "N" => "Ν",
  "C" => "Ξ",
  "O" => "Ο",
  
  "O\\" => "Ὸ",
  "O/" => "Ό",
  "O)" => "Ὀ",
  "O(" => "Ὁ",
  "O)\\" => "Ὂ",
  "O)/" => "Ὄ",
  "O(\\" => "Ὃ",
  "O(/" => "Ὅ",

  "P" => "Π",
  "R" => "Ρ",
  "S" => "Σ",
  "T" => "Τ",
  "U" => "Υ",
  
  "U\\" => "Ὺ",
  "U/" => "aΎ",

  # 'U)' werk niet?
  "U)" => "",

  "U(" => "Ὑ",

  # 'U)' werk niet?
  "U)\\" => "",
  "U)/" => "",

  "U(\\" => "Ὓ",
  "U(/" => "Ὕ",

  # 'U)' werk niet?
  "U)=" => "",

  "U(=" => "Ὗ",

  "F" => "Φ",
  "X" => "Χ",
  "Y" => "Ψ",
  "W" => "Ω",
  "V" => "Ϝ",
  "," => ",",
  "?" => ";",
  ";" => "·",
  "." => ".",
  ":" => "·",
  "|" => "ͺ"
);

